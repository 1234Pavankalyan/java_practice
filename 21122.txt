import java.util.*;
class Sample{
  public static void main(String args[])
  { 
    Scanner sc=new Scanner(System.in);
    System.out.println("enter number");
   int num=sc.nextInt();
    for(int i=1;i<=num/2;i++)
      {
        if(num%i==0)
        {
          System.out.println(i);
        }
      }
    }
  }
=================================
import java.util.*;
class Sample{
  public static void main(String args[])
  { 
    Scanner sc=new Scanner(System.in);
    int count;
    System.out.println("Enter range");
    int n=sc.nextInt();
    for(int i=1;i<=n;i++){
      count=0;
          for(int j=1;j<=i;j++)
      {
        if(i%j==0)
        {
         count++;
        }
      }
    if(count==2){
      System.out.println(i);
    }
      
    }
    }
  }
===========================
fact
import java.util.*;
class Sample{
  public static void main(String args[])
  { 
    Scanner sc=new Scanner(System.in);
    System.out.println("Enter number");
    int  n=sc.nextInt();
    int fact=1;
    for(int i=1;i<=n;i++)
      {
        fact=fact*i;
      }
  System.out.println(fact);
    }
  }
========================
import java.util.*;
class Sample{
  public static void main(String args[])
  { 
    Scanner sc=new Scanner(System.in);
    System.out.println("Enter number");
    int n=sc.nextInt();
    int rem,sum=0;
    while(n>0)
      {
       rem=n%10;
        sum=sum+rem;
        n=n/10;
      }
    System.out.println(sum);
    }
  }

===========================
sum of first and last digit
import java.util.*;
class Sample{
  public static void main(String args[])
  { 
    Scanner sc=new Scanner(System.in);
    System.out.println("Enter number");
    int n=sc.nextInt();
    int rem,prod=1;
    int last_digit=n%10;
    while(n>=9)
      {
        n=n/10;
      }
    int first_number=n;
    int sum=first_number+last_digit;
    System.out.println(sum);
    }
  }
================================
Strong 1 to n
import java.util.*;
class Sample{
  public static void main(String args[])
  { 
     Scanner sc=new Scanner(System.in);
    System.out.println("Enter number");
    int n=sc.nextInt();//160
    int count,sum=0,temp,rem,fact;
    for(int i=1;i<=n;i++){ //1<=160
     temp=i;
      while(temp>0){
        rem=temp%10;
        fact=1;
        for(int j=1;j<=rem;j++){
          fact=fact*j;
        }
       
        sum=sum+fact;
        temp=temp/10;
      }
      if(sum==i){
        System.out.println(i);
      }
       sum=0;
    }
    
    }
  }
=================================
An Armstrong number is a positive m-digit number that is equal to the sum of the mth powers of their digits


153: 1^3 + 5^3 + 3^3 = 1 + 125+ 27 = 153

125: 1^3 + 2^3 + 5^3 = 1 + 8 + 125 = 134 (Not an Armstrong Number)

1634: 1^4 + 6^4 + 3^4 + 4^4 = 1 + 1296 + 81 + 256 = 1643
==============================
1.factors of given number
import java.util.*;
class Perfect1{
  public static void main(String args[]){
    Scanner s=new Scanner(System.in);
    System.out.println("Enter the number");
    int num=s.nextInt();
    for(int i=1;i<=num;i++){
      if(num%i==0){
        System.out.println(i);
      }
    }
  }
}
===============================
2.prime number
import java.util.*;
class Prime1{
  public static void main(String args[]){
    Scanner s=new Scanner(System.in);
    System.out.println("Enter the number to check its prime number or not ");
    int num=s.nextInt();
    int i=1,count=0;
    while(num>=i){
      if(num%i==0){
        count++;
      }
      i++;
    }
    if(count==2){
      System.out.println(num+" Prime number");
    }
    else{
      System.out.println(num+" Not Prime number");
    }
    }
  }

===============================
3.prime number between 1 to n
import java.util.*;

class Prime2 {
  public static void main(String args[]) {
    Scanner sc = new Scanner(System.in);
    int count;
    System.out.println("Enter range");
    int n = sc.nextInt();
     
    for (int i = 1; i <= n; i++) {
      count = 0;
      for (int j = 1; j <= i; j++) {
        if (i % j == 0) {
          count++;
        }
      }
      if (count == 2) {
        System.out.println(i);
      }
    }
  }
}
=================================================
4.sum of prime

5.factioral of a give number
6.number of digits in given number
7.sum of digitis
8.prodct of digit
9.sum of first and last digit of a given number
10.armstrong number
11.armstrong between 1 to n
12.perfect number
13.strong number
14.strong number between from 1 to n.
